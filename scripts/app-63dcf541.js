(function(){angular.module("randsumFrontend",["ngResource","ngAnimate","ngTouch","ui.router","ngMaterial"]).config(["$stateProvider","$urlRouterProvider",function(e,t){return e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController"}).state("about",{url:"/about",templateUrl:"app/about/main.html",controller:"AboutController"}).state("docs",{url:"/docs",templateUrl:"app/docs/main.html",controller:"DocsController"}),t.otherwise("/")}])}).call(this),function(){var e;e=function(){function e(e){return this.$resource=e,this.$resource("http://api.randsum.io/v1/roll/:numberOfRolls/d/:diceSides")}return e.$inject=["$resource"],e}(),angular.module("randsumFrontend").service("RollerService",e)}.call(this),function(){angular.module("randsumFrontend").controller("NavbarCtrl",["$scope",function(e){return e.date=new Date}])}.call(this),function(){"use strict";describe("UnlockableService",function(){var e;return e=null,beforeEach(function(){return module("randsumFrontend"),inject(function(t){return e=t})}),afterEach(function(){return e.docs.locked=!0,e.code.locked=!0,e.about.locked=!0}),describe("allLocked()",function(){return it("returns true if all unlockables are locked",function(){return e.docs.locked=!0,e.code.locked=!0,e.about.locked=!0,expect(e.allLocked()).toEqual(!0)}),it("returns false if any unlockables are unlocked",function(){return e.docs.locked=!1,expect(e.allLocked()).toEqual(!1)})}),describe("unlockAll()",function(){return it("sets locked = false on each unlockable",function(){return e.unlockAll(),expect(e.docs.locked).toEqual(!1),expect(e.code.locked).toEqual(!1),expect(e.about.locked).toEqual(!1)})}),describe("checkRoll()",function(){return describe("when given too low a roll",function(){return beforeEach(function(){return e.checkRoll(1)}),it("doesn't unlock anything",function(){return expect(e.docs.locked).toEqual(!0),expect(e.code.locked).toEqual(!0),expect(e.about.locked).toEqual(!0)})}),describe("when given a roll higher than an check value",function(){return beforeEach(function(){return e.checkRoll(11)}),it("unlocks the relevant unlockables",function(){return expect(e.docs.locked).toEqual(!0),expect(e.code.locked).toEqual(!0),expect(e.about.locked).toEqual(!1)})})})})}.call(this),function(){var e;e=function(){function e(){}return e.prototype.docs={check:120,locked:!0},e.prototype.code={check:500,locked:!0},e.prototype.about={check:10,locked:!0},e.prototype.all=function(){return[this.docs,this.code,this.about]},e.prototype.checkRoll=function(e){return angular.forEach(this.all(),function(t){return e>=t.check?t.locked=!1:void 0})},e.prototype.allLocked=function(){var e;return e=!0,angular.forEach(this.all(),function(t){return t.locked===!1?e=!1:void 0}),e},e.prototype.unlockAll=function(){return angular.forEach(this.all(),function(e){return e.locked=!1})},e}(),angular.module("randsumFrontend").service("UnlockableService",e)}.call(this),function(){"use strict";var e,t;e=function(){function e(){}return e.prototype.get=function(e,t){var o;return o={total:20},t&&t(o),o},e}(),t=new e,describe("MainController",function(){var e,o;return e=null,o=null,beforeEach(module("randsumFrontend")),beforeEach(module(function(e){return e.value("RollerService",t),null})),beforeEach(inject(function(t,n,l){return o=l,e=t.$new(),n("MainController",{$scope:e})})),describe("$scope.rollAgain",function(){return it("sets the $scope.result to the result.total of the RollerService",function(){return e.rollAgain(),expect(e.result).toEqual(20)})}),describe("defaults",function(){return describe("$scope.roll",function(){return it("has a default numberOfRolls = 1",function(){return expect(e.roll.numberOfRolls).toEqual(1)}),it("has a default diceSides = 20",function(){return expect(e.roll.diceSides).toEqual(20)})})})})}.call(this),function(){angular.module("randsumFrontend").controller("MainController",["RollerService","UnlockableService","$scope",function(e,t,o){return o.loading=!1,o.roll={numberOfRolls:1,diceSides:20},o.rollAgain=function(){return o.result=0,o.loading=!0,e.get({numberOfRolls:o.roll.numberOfRolls,diceSides:o.roll.diceSides},function(e){return o.loading=!1,o.result=e.total,t.checkRoll(o.result)})}}])}.call(this),function(){angular.module("randsumFrontend").controller("AboutController",["$scope","UnlockableService",function(e,t){return t.allLocked()?t.unlockAll():void 0}])}.call(this),function(){angular.module("randsumFrontend").controller("DocsController",["$scope","UnlockableService",function(e,t){return t.allLocked()?t.unlockAll():void 0}])}.call(this),angular.module("randsumFrontend").run(["$templateCache",function(e){e.put("app/docs/main.html",'<div layout="vertical" layout-fill=""><md-content layout="roll" layout-sm="column" flex=""><p>DORKS</p></md-content><footer></footer></div>'),e.put("app/about/main.html",'<div layout="vertical" layout-fill=""><md-content layout="roll" layout-sm="column" flex=""><p>TERP</p></md-content><footer></footer></div>'),e.put("app/main/main.html",'<div layout="vertical" layout-fill=""><md-content layout="row" layout-sm="column" flex=""><md-button ng-disabled="{{loading}}" class="md-raised original-roll-button" ng-click="rollAgain()">Roll</md-button></md-content><md-content layout="row" layout-sm="column" flex=""><p>{{ result }}</p></md-content><footer></footer></div>'),e.put("components/navbar/navbar.html",'<md-toolbar layout="row" layout-align="center center" ng-controller="NavbarCtrl"><md-button href="https://github.com/Swiip/generator-gulp-angular">Gulp Angular</md-button><section flex="" layout="row" layout-align="left center"><md-button href="#" class="md-raised">Home</md-button><md-button href="#" class="md-raised">About</md-button><md-button href="#" class="md-raised">Contact</md-button></section><md-button href="#">Current date: {{ date | date:\'yyyy-MM-dd\' }}</md-button></md-toolbar>')}]);